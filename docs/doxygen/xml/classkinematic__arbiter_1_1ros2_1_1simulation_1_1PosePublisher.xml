<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher" kind="class" language="C++" prot="public">
    <compoundname>kinematic_arbiter::ros2::simulation::PosePublisher</compoundname>
    <basecompoundref refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher" prot="public" virt="non-virtual">kinematic_arbiter::ros2::simulation::SensorPublisher&lt; geometry_msgs::msg::PoseStamped &gt;</basecompoundref>
    <includes refid="sensor__publisher_8hpp" local="no">sensor_publisher.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher_1a72ac7138acb634aa8e65ccd794d40e26" prot="public" static="no">
        <type><ref refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher" kindref="compound">SensorPublisher</ref>&lt; geometry_msgs::msg::PoseStamped &gt;</type>
        <definition>using kinematic_arbiter::ros2::simulation::PosePublisher::Base =  SensorPublisher&lt;geometry_msgs::msg::PoseStamped&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" line="190" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher_1a1a193eb149363739b224d88377ea933e" prot="public" static="no">
        <type><ref refid="structkinematic__arbiter_1_1sensors_1_1PoseSensorModel_1_1MeasurementIndex" kindref="compound">kinematic_arbiter::sensors::PoseSensorModel::MeasurementIndex</ref></type>
        <definition>using kinematic_arbiter::ros2::simulation::PosePublisher::MIdx =  kinematic_arbiter::sensors::PoseSensorModel::MeasurementIndex</definition>
        <argsstring></argsstring>
        <name>MIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" line="191" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher_1a4f590d3ec93876067d8b0e7d50cc6a94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>kinematic_arbiter::ros2::simulation::PosePublisher::PosePublisher</definition>
        <argsstring>(rclcpp::Node *node, const std::string &amp;name, double noise_sigma)</argsstring>
        <name>PosePublisher</name>
        <param>
          <type>rclcpp::Node *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>noise_sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" line="193" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher_1a8501faf681a603a9c906271eacee4ef8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>geometry_msgs::msg::PoseStamped</type>
        <definition>geometry_msgs::msg::PoseStamped kinematic_arbiter::ros2::simulation::PosePublisher::eigenToRos</definition>
        <argsstring>(const Eigen::VectorXd &amp;measurement, const std::string &amp;frame_id, const rclcpp::Time &amp;timestamp) override</argsstring>
        <name>eigenToRos</name>
        <reimplements refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1ab7118cce5dfde001ef17b9372a8686b6">eigenToRos</reimplements>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>measurement</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>frame_id</declname>
        </param>
        <param>
          <type>const rclcpp::Time &amp;</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Convert an Eigen vector to a ROS message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>measurement</parametername>
</parameternamelist>
<parameterdescription>
<para>The Eigen vector to convert </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame ID for the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>ROS timestamp for the message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ROS message </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" line="199" column="35" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" bodystart="199" bodyend="235"/>
        <references refid="structkinematic__arbiter_1_1sensors_1_1PoseSensorModel_1_1MeasurementIndex_1aa82e69d83bc6648c75ae18d953e1726a" compoundref="pose__sensor__model_8hpp" startline="36">kinematic_arbiter::sensors::PoseSensorModel::MeasurementIndex::QW</references>
        <references refid="structkinematic__arbiter_1_1sensors_1_1PoseSensorModel_1_1MeasurementIndex_1a5d0d9bba179005ca73133fd5ef220e31" compoundref="pose__sensor__model_8hpp" startline="37">kinematic_arbiter::sensors::PoseSensorModel::MeasurementIndex::QX</references>
        <references refid="structkinematic__arbiter_1_1sensors_1_1PoseSensorModel_1_1MeasurementIndex_1a4f13afaa4918d546c2db3a3bfc26fa9f" compoundref="pose__sensor__model_8hpp" startline="38">kinematic_arbiter::sensors::PoseSensorModel::MeasurementIndex::QY</references>
        <references refid="structkinematic__arbiter_1_1sensors_1_1PoseSensorModel_1_1MeasurementIndex_1a39070b9dd967395a0d87ae74e563159b" compoundref="pose__sensor__model_8hpp" startline="39">kinematic_arbiter::sensors::PoseSensorModel::MeasurementIndex::QZ</references>
        <references refid="structkinematic__arbiter_1_1sensors_1_1PoseSensorModel_1_1MeasurementIndex_1aca869efd6fe461d0e4ceb4f0240a6698" compoundref="pose__sensor__model_8hpp" startline="31">kinematic_arbiter::sensors::PoseSensorModel::MeasurementIndex::X</references>
        <references refid="structkinematic__arbiter_1_1sensors_1_1PoseSensorModel_1_1MeasurementIndex_1a7b208ac8358eaa6c9b164b44a56f59f6" compoundref="pose__sensor__model_8hpp" startline="32">kinematic_arbiter::sensors::PoseSensorModel::MeasurementIndex::Y</references>
        <references refid="structkinematic__arbiter_1_1sensors_1_1PoseSensorModel_1_1MeasurementIndex_1a3f0f8b68dafc224d0aab20d0c9fd5e3c" compoundref="pose__sensor__model_8hpp" startline="33">kinematic_arbiter::sensors::PoseSensorModel::MeasurementIndex::Z</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Pose sensor publisher implementation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>kinematic_arbiter::ros2::simulation::PosePublisher</label>
        <link refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>kinematic_arbiter::ros2::simulation::SensorPublisher&lt; geometry_msgs::msg::PoseStamped &gt;</label>
        <link refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>kinematic_arbiter::ros2::simulation::PosePublisher</label>
        <link refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>kinematic_arbiter::ros2::simulation::SensorPublisher&lt; geometry_msgs::msg::PoseStamped &gt;</label>
        <link refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher"/>
      </node>
    </collaborationgraph>
    <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" line="188" column="1" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/simulation/sensor_publisher.hpp" bodystart="188" bodyend="236"/>
    <listofallmembers>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher_1a72ac7138acb634aa8e65ccd794d40e26" prot="public" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>Base</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher_1a8501faf681a603a9c906271eacee4ef8" prot="public" virt="virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>eigenToRos</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1ac89c1b6b2e1b41eda1851d37209ceaa4" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>lower_bound_pub_</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1a22687a2da35486cbe7390d2a3185434e" prot="public" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>MeasurementModelInterface</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher_1a1a193eb149363739b224d88377ea933e" prot="public" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>MIdx</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1adaaeae7c03fc8e9cbd89254bb9885049" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>name_</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1a4ad5e309bbba9fa26ea9ebad0d83291f" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>node_</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1aa2dfcea2e499e82293e24b1ae7dad6ad" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>noise_dist_</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1ae6337e8c038af34a14801f7ea9a70b06" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>noise_sigma_</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1PosePublisher_1a4f590d3ec93876067d8b0e7d50cc6a94" prot="public" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>PosePublisher</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1a8f52af5543a29c7e61d315ef4fa57af9" prot="public" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>publish</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1ab33550bd1d561f2dfc95342b575dbcc4" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>raw_pub_</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1a88146820d1da0925417e98f8cb37d20e" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>sensor_type_</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1afa109a98e1dd6e2aae3bb9a288460194" prot="public" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>SensorPublisher</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1a703880f8676edeefeb964cb21f0fecf8" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>truth_pub_</name></member>
      <member refid="classkinematic__arbiter_1_1ros2_1_1simulation_1_1SensorPublisher_1af1813d86918ff7414afb8b6b8d2d7a89" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::ros2::simulation::PosePublisher</scope><name>upper_bound_pub_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
