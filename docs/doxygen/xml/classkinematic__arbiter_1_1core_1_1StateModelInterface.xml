<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classkinematic__arbiter_1_1core_1_1StateModelInterface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>kinematic_arbiter::core::StateModelInterface</compoundname>
    <derivedcompoundref refid="classkinematic__arbiter_1_1models_1_1RigidBodyStateModel" prot="public" virt="non-virtual">kinematic_arbiter::models::RigidBodyStateModel</derivedcompoundref>
    <includes refid="state__model__interface_8hpp" local="no">state_model_interface.hpp</includes>
    <innerclass refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" prot="public">kinematic_arbiter::core::StateModelInterface::Params</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" prot="public" static="no">
        <type>Eigen::Matrix&lt; double, <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a5858c293ee72008054d3f13a67c908a0" kindref="member">StateSize</ref>, 1 &gt;</type>
        <definition>using kinematic_arbiter::core::StateModelInterface::StateVector =  Eigen::Matrix&lt;double, StateSize, 1&gt;</definition>
        <argsstring></argsstring>
        <name>StateVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="17" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" prot="public" static="no">
        <type>Eigen::Matrix&lt; double, <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a5858c293ee72008054d3f13a67c908a0" kindref="member">StateSize</ref>, <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a5858c293ee72008054d3f13a67c908a0" kindref="member">StateSize</ref> &gt;</type>
        <definition>using kinematic_arbiter::core::StateModelInterface::StateMatrix =  Eigen::Matrix&lt;double, StateSize, StateSize&gt;</definition>
        <argsstring></argsstring>
        <name>StateMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="18" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af47babdcc2441df1e20ce0e1dcf083d3" prot="public" static="no">
        <type>Eigen::Vector3d</type>
        <definition>using kinematic_arbiter::core::StateModelInterface::Vector3d =  Eigen::Vector3d</definition>
        <argsstring></argsstring>
        <name>Vector3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="19" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a5858c293ee72008054d3f13a67c908a0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int kinematic_arbiter::core::StateModelInterface::StateSize</definition>
        <argsstring></argsstring>
        <name>StateSize</name>
        <initializer>= <ref refid="structkinematic__arbiter_1_1core_1_1StateIndex_1a941e39d09cd093509b19004b45c16f6a" kindref="member">StateIndex::kFullStateSize</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="16" column="24" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ab45147eda8b8cf3a95f11700fa8f9832" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double kinematic_arbiter::core::StateModelInterface::kMinStateDiff</definition>
        <argsstring></argsstring>
        <name>kMinStateDiff</name>
        <initializer>= 1e-6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="200" column="27" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="200" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ac321300d03a7b9d6b31e1351e6f268ea" compoundref="state__model__interface_8hpp" startline="164" endline="180">UpdateProcessNoise</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a318a341229a8bb90c1ea7712cb8d4869" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double kinematic_arbiter::core::StateModelInterface::kMaxStateDiff</definition>
        <argsstring></argsstring>
        <name>kMaxStateDiff</name>
        <initializer>= 1e6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="201" column="27" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="201" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ac321300d03a7b9d6b31e1351e6f268ea" compoundref="state__model__interface_8hpp" startline="164" endline="180">UpdateProcessNoise</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" prot="protected" static="no" mutable="no">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref></type>
        <definition>StateVector kinematic_arbiter::core::StateModelInterface::state_diff_</definition>
        <argsstring></argsstring>
        <name>state_diff_</name>
        <initializer>= StateVector::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="203" column="15" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="203" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ac321300d03a7b9d6b31e1351e6f268ea" compoundref="state__model__interface_8hpp" startline="164" endline="180">UpdateProcessNoise</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" prot="protected" static="no" mutable="no">
        <type><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" kindref="compound">Params</ref></type>
        <definition>Params kinematic_arbiter::core::StateModelInterface::params_</definition>
        <argsstring></argsstring>
        <name>params_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="206" column="10" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="206" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a82facf89d0ec9ebf62547512a8ae9af4" compoundref="state__model__interface_8hpp" startline="196" endline="196">GetParams</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa66fe5b173bd89acfa2e81151a9b0226" compoundref="state__model__interface_8hpp" startline="58" endline="89">StateModelInterface</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ac321300d03a7b9d6b31e1351e6f268ea" compoundref="state__model__interface_8hpp" startline="164" endline="180">UpdateProcessNoise</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" prot="protected" static="no" mutable="no">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" kindref="member">StateMatrix</ref></type>
        <definition>StateMatrix kinematic_arbiter::core::StateModelInterface::process_noise_</definition>
        <argsstring></argsstring>
        <name>process_noise_</name>
        <initializer>= StateMatrix::Identity()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="209" column="15" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="209" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a4efb543e3192c48d7a466356cfd77583" compoundref="state__model__interface_8hpp" startline="187" endline="189">GetProcessNoise</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2897de0f322264af5edf9e4b02f811ac" compoundref="state__model__interface_8hpp" startline="141" endline="143">GetProcessNoiseCovariance</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a457d6cf0093c1b61de4d0462dfbd6c44" compoundref="state__model__interface_8hpp" startline="49" endline="51">reset</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa66fe5b173bd89acfa2e81151a9b0226" compoundref="state__model__interface_8hpp" startline="58" endline="89">StateModelInterface</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ac321300d03a7b9d6b31e1351e6f268ea" compoundref="state__model__interface_8hpp" startline="164" endline="180">UpdateProcessNoise</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af2fb47f316594dbb195b009f117a4f31" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool kinematic_arbiter::core::StateModelInterface::state_initialized_</definition>
        <argsstring></argsstring>
        <name>state_initialized_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="212" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a77a6fb354f49c8d321d87175f35476ae" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double kinematic_arbiter::core::StateModelInterface::time_since_reset_</definition>
        <argsstring></argsstring>
        <name>time_since_reset_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="213" column="10" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a457d6cf0093c1b61de4d0462dfbd6c44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void kinematic_arbiter::core::StateModelInterface::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset the state model to initial state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="49" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="49" bodyend="51"/>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" compoundref="state__model__interface_8hpp" startline="209">process_noise_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa66fe5b173bd89acfa2e81151a9b0226" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>kinematic_arbiter::core::StateModelInterface::StateModelInterface</definition>
        <argsstring>(const Params &amp;params=Params())</argsstring>
        <name>StateModelInterface</name>
        <param>
          <type>const <ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" kindref="compound">Params</ref> &amp;</type>
          <declname>params</declname>
          <defval><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" kindref="compound">Params</ref>()</defval>
        </param>
        <briefdescription>
<para>Constructor with parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters for this state model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="58" column="12" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="58" bodyend="89"/>
        <references refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a73690c6a07d29e4abca0afc538679dff" compoundref="state__model__interface_8hpp" startline="33">kinematic_arbiter::core::StateModelInterface::Params::angular_acceleration_uncertainty_per_second</references>
        <references refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a86360392fa8acb4d1fbf772dc07a57d2" compoundref="state__model__interface_8hpp" startline="31">kinematic_arbiter::core::StateModelInterface::Params::angular_velocity_uncertainty_per_second</references>
        <references refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1ab888b7db255ed7924d57bfef6315bcc3" compoundref="state__model__interface_8hpp" startline="32">kinematic_arbiter::core::StateModelInterface::Params::linear_acceleration_uncertainty_per_second</references>
        <references refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a20a9ab420ec092fe827450eba25d39f2" compoundref="state__model__interface_8hpp" startline="30">kinematic_arbiter::core::StateModelInterface::Params::linear_velocity_uncertainty_per_second</references>
        <references refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1aeb7691c587b5780480a2bbccae6d7f59" compoundref="state__model__interface_8hpp" startline="29">kinematic_arbiter::core::StateModelInterface::Params::orientation_uncertainty_per_second</references>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" compoundref="state__model__interface_8hpp" startline="206">params_</references>
        <references refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a36d6891ed987ad84626c353209e93d62" compoundref="state__model__interface_8hpp" startline="28">kinematic_arbiter::core::StateModelInterface::Params::position_uncertainty_per_second</references>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" compoundref="state__model__interface_8hpp" startline="209">process_noise_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a6cf0e88c125182ab7faaa90b25abead0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual kinematic_arbiter::core::StateModelInterface::~StateModelInterface</definition>
        <argsstring>()=default</argsstring>
        <name>~StateModelInterface</name>
        <briefdescription>
<para>Virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="94" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aff55747339d075abc3c2a48d447a24eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref></type>
        <definition>virtual StateVector kinematic_arbiter::core::StateModelInterface::PredictState</definition>
        <argsstring>(const StateVector &amp;state, double dt) const =0</argsstring>
        <name>PredictState</name>
        <reimplementedby refid="classkinematic__arbiter_1_1models_1_1RigidBodyStateModel_1a5c20315ad9946aee82af907393333f06">PredictState</reimplementedby>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Predict state forward in time: x̂_k^- = f(x̂_{k-1}^+, u_k) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Current state estimate x̂_{k-1}^+ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Time step in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Predicted next state x̂_k^- </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="103" column="23"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1d1d3982bee824943c5ab5ef0686de50" compoundref="state__model__interface_8hpp" startline="125" endline="131">PredictStateWithInputAccelerations</referencedby>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ad928ea890a63fd0c6b069c8b519178b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" kindref="member">StateMatrix</ref></type>
        <definition>virtual StateMatrix kinematic_arbiter::core::StateModelInterface::GetTransitionMatrix</definition>
        <argsstring>(const StateVector &amp;state, double dt) const =0</argsstring>
        <name>GetTransitionMatrix</name>
        <reimplementedby refid="classkinematic__arbiter_1_1models_1_1RigidBodyStateModel_1a998e9b62772caea5fc4a44858f201598">GetTransitionMatrix</reimplementedby>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Get the state transition matrix: A_k. </para>
        </briefdescription>
        <detaileddescription>
<para>The matrix A_k linearizes the state transition function: A_k = ∂f/∂x evaluated at x̂_{k-1}^+ and u_k</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Current state estimate x̂_{k-1}^+ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Time step in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>State transition matrix A_k </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="116" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1d1d3982bee824943c5ab5ef0686de50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref></type>
        <definition>virtual StateVector kinematic_arbiter::core::StateModelInterface::PredictStateWithInputAccelerations</definition>
        <argsstring>(const StateVector &amp;state, double dt, const Vector3d &amp;linear_acceleration=Vector3d::Zero(), const Vector3d &amp;angular_acceleration=Vector3d::Zero()) const</argsstring>
        <name>PredictStateWithInputAccelerations</name>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af47babdcc2441df1e20ce0e1dcf083d3" kindref="member">Vector3d</ref> &amp;</type>
          <declname>linear_acceleration</declname>
          <defval>Vector3d::Zero()</defval>
        </param>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af47babdcc2441df1e20ce0e1dcf083d3" kindref="member">Vector3d</ref> &amp;</type>
          <declname>angular_acceleration</declname>
          <defval>Vector3d::Zero()</defval>
        </param>
        <briefdescription>
<para>Predict state forward in time: x̂_k^- = f(x̂_{k-1}^+, u_k) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Current state estimate x̂_{k-1}^+ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Time step in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Predicted next state x̂_k^- </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="125" column="23" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="125" bodyend="131"/>
        <references refid="structkinematic__arbiter_1_1core_1_1StateIndex_1_1LinearAcceleration_1abcde4fc83b04286fb93abd48826b54fe" compoundref="state__index_8hpp" startline="66" endline="66">kinematic_arbiter::core::StateIndex::LinearAcceleration::Begin</references>
        <references refid="structkinematic__arbiter_1_1core_1_1StateIndex_1_1AngularAcceleration_1aba70ff56c29cff8b0cd60ddd365d093f" compoundref="state__index_8hpp" startline="76" endline="76">kinematic_arbiter::core::StateIndex::AngularAcceleration::Begin</references>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aff55747339d075abc3c2a48d447a24eb">PredictState</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2897de0f322264af5edf9e4b02f811ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" kindref="member">StateMatrix</ref></type>
        <definition>virtual StateMatrix kinematic_arbiter::core::StateModelInterface::GetProcessNoiseCovariance</definition>
        <argsstring>(double dt) const</argsstring>
        <name>GetProcessNoiseCovariance</name>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Get the process noise covariance matrix: Q_k. </para>
        </briefdescription>
        <detaileddescription>
<para>Process noise represents uncertainty in the state transition.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Time step in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Process noise covariance matrix Q_k </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="141" column="23" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="141" bodyend="143"/>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" compoundref="state__model__interface_8hpp" startline="209">process_noise_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ac321300d03a7b9d6b31e1351e6f268ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void kinematic_arbiter::core::StateModelInterface::UpdateProcessNoise</definition>
        <argsstring>(const StateVector &amp;a_priori_state, const StateVector &amp;a_posteriori_state, double process_to_measurement_ratio, double dt)</argsstring>
        <name>UpdateProcessNoise</name>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref> &amp;</type>
          <declname>a_priori_state</declname>
        </param>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref> &amp;</type>
          <declname>a_posteriori_state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>process_to_measurement_ratio</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Update process noise based on state correction. </para>
        </briefdescription>
        <detaileddescription>
<para>Implements dynamic process noise estimation using the equation: Q̂_k = Q̂_{k-1} + (ζ·dt·(x̂_k^- - x̂_k^+)(x̂_k^- - x̂_k^+)^T - Q̂_{k-1})/n</para>
<para>Where:<itemizedlist>
<listitem><para>Q̂_k is the new process noise estimate</para>
</listitem><listitem><para>ζ is the process to measurement noise ratio</para>
</listitem><listitem><para>dt is the time step</para>
</listitem><listitem><para>x̂_k^- is the a priori state estimate (before update)</para>
</listitem><listitem><para>x̂_k^+ is the a posteriori state estimate (after update)</para>
</listitem><listitem><para>n is the sample window size</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_priori_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The a priori state estimate x̂_k^- </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_posteriori_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The a posteriori state estimate x̂_k^+ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>process_to_measurement_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>The process to measurement noise ratio (ζ) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>Time step in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="164" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="164" bodyend="180"/>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a318a341229a8bb90c1ea7712cb8d4869" compoundref="state__model__interface_8hpp" startline="201">kMaxStateDiff</references>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ab45147eda8b8cf3a95f11700fa8f9832" compoundref="state__model__interface_8hpp" startline="200">kMinStateDiff</references>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" compoundref="state__model__interface_8hpp" startline="206">params_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" compoundref="state__model__interface_8hpp" startline="209">process_noise_</references>
        <references refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a650bddc23959713130e3a0c564de5af1" compoundref="state__model__interface_8hpp" startline="25">kinematic_arbiter::core::StateModelInterface::Params::process_noise_window</references>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" compoundref="state__model__interface_8hpp" startline="203">state_diff_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a4efb543e3192c48d7a466356cfd77583" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" kindref="member">StateMatrix</ref> &amp;</type>
        <definition>const StateMatrix&amp; kinematic_arbiter::core::StateModelInterface::GetProcessNoise</definition>
        <argsstring>() const</argsstring>
        <name>GetProcessNoise</name>
        <briefdescription>
<para>Get the current process noise matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current process noise matrix Q̂ </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="187" column="21" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="187" bodyend="189"/>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" compoundref="state__model__interface_8hpp" startline="209">process_noise_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a82facf89d0ec9ebf62547512a8ae9af4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" kindref="compound">Params</ref> &amp;</type>
        <definition>const Params&amp; kinematic_arbiter::core::StateModelInterface::GetParams</definition>
        <argsstring>() const</argsstring>
        <name>GetParams</name>
        <briefdescription>
<para>Get the state model parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference to parameters </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="196" column="16" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="196" bodyend="196"/>
        <references refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" compoundref="state__model__interface_8hpp" startline="206">params_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for state transition models used in Kalman filtering. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>kinematic_arbiter::models::RigidBodyStateModel</label>
        <link refid="classkinematic__arbiter_1_1models_1_1RigidBodyStateModel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>kinematic_arbiter::core::StateModelInterface</label>
        <link refid="classkinematic__arbiter_1_1core_1_1StateModelInterface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>kinematic_arbiter::core::StateModelInterface</label>
        <link refid="classkinematic__arbiter_1_1core_1_1StateModelInterface"/>
        <childnode refid="2" relation="usage">
          <edgelabel>params_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>kinematic_arbiter::core::StateModelInterface::Params</label>
        <link refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params"/>
      </node>
    </collaborationgraph>
    <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" line="13" column="1" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp" bodystart="13" bodyend="214"/>
    <listofallmembers>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a82facf89d0ec9ebf62547512a8ae9af4" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>GetParams</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a4efb543e3192c48d7a466356cfd77583" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>GetProcessNoise</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2897de0f322264af5edf9e4b02f811ac" prot="public" virt="virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>GetProcessNoiseCovariance</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ad928ea890a63fd0c6b069c8b519178b0" prot="public" virt="pure-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>GetTransitionMatrix</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a318a341229a8bb90c1ea7712cb8d4869" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>kMaxStateDiff</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ab45147eda8b8cf3a95f11700fa8f9832" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>kMinStateDiff</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>params_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aff55747339d075abc3c2a48d447a24eb" prot="public" virt="pure-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>PredictState</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1d1d3982bee824943c5ab5ef0686de50" prot="public" virt="virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>PredictStateWithInputAccelerations</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>process_noise_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a457d6cf0093c1b61de4d0462dfbd6c44" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>reset</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>state_diff_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af2fb47f316594dbb195b009f117a4f31" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>state_initialized_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>StateMatrix</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa66fe5b173bd89acfa2e81151a9b0226" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>StateModelInterface</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a5858c293ee72008054d3f13a67c908a0" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>StateSize</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>StateVector</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a77a6fb354f49c8d321d87175f35476ae" prot="protected" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>time_since_reset_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ac321300d03a7b9d6b31e1351e6f268ea" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>UpdateProcessNoise</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af47babdcc2441df1e20ce0e1dcf083d3" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>Vector3d</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a6cf0e88c125182ab7faaa90b25abead0" prot="public" virt="virtual"><scope>kinematic_arbiter::core::StateModelInterface</scope><name>~StateModelInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
