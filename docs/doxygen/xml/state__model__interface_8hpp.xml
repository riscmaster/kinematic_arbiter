<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="state__model__interface_8hpp" kind="file" language="C++">
    <compoundname>state_model_interface.hpp</compoundname>
    <includes local="no">Eigen/Dense</includes>
    <includes local="no">cmath</includes>
    <includes refid="state__index_8hpp" local="yes">kinematic_arbiter/core/state_index.hpp</includes>
    <includedby refid="mediated__kalman__filter_8hpp" local="yes">/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp</includedby>
    <includedby refid="rigid__body__state__model_8hpp" local="yes">/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/models/rigid_body_state_model.hpp</includedby>
    <includedby refid="filter__wrapper_8hpp" local="yes">/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/filter_wrapper.hpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>kinematic_arbiter/core/state_index.hpp</label>
        <link refid="state__index_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="2">
        <label>Eigen/Dense</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="1">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp</label>
        <link refid="state__model__interface_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstddef</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/position_sensor_handler.hpp</label>
        <link refid="position__sensor__handler_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/velocity_sensor_handler.hpp</label>
        <link refid="velocity__sensor__handler_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/src/ros2/filter_wrapper.cpp</label>
        <link refid="filter__wrapper_8cpp"/>
      </node>
      <node id="10">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/pose_sensor_handler.hpp</label>
        <link refid="pose__sensor__handler_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/imu_sensor_handler.hpp</label>
        <link refid="imu__sensor__handler_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/src/ros2/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="8">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/sensor_handler.hpp</label>
        <link refid="sensor__handler_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/src/ros2/kinematic_arbiter_node.cpp</label>
        <link refid="kinematic__arbiter__node_8cpp"/>
      </node>
      <node id="1">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp</label>
        <link refid="state__model__interface_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp</label>
        <link refid="mediated__kalman__filter_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/models/rigid_body_state_model.hpp</label>
        <link refid="rigid__body__state__model_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/filter_wrapper.hpp</label>
        <link refid="filter__wrapper_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/ros2/kinematic_arbiter_node.hpp</label>
        <link refid="kinematic__arbiter__node_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classkinematic__arbiter_1_1core_1_1StateModelInterface" prot="public">kinematic_arbiter::core::StateModelInterface</innerclass>
    <innerclass refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" prot="public">kinematic_arbiter::core::StateModelInterface::Params</innerclass>
    <innernamespace refid="namespacekinematic__arbiter">kinematic_arbiter</innernamespace>
    <innernamespace refid="namespacekinematic__arbiter_1_1core">kinematic_arbiter::core</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="state__index_8hpp" kindref="compound">kinematic_arbiter/core/state_index.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacekinematic__arbiter" kindref="compound">kinematic_arbiter</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">core<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface" kindref="compound">StateModelInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a5858c293ee72008054d3f13a67c908a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a5858c293ee72008054d3f13a67c908a0" kindref="member">StateSize</ref><sp/>=<sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateIndex_1a941e39d09cd093509b19004b45c16f6a" kindref="member">StateIndex::kFullStateSize</ref>;</highlight></codeline>
<codeline lineno="17" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>StateSize,<sp/>1&gt;;</highlight></codeline>
<codeline lineno="18" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" kindref="member">StateMatrix</ref><sp/>=<sp/>Eigen::Matrix&lt;double,<sp/>StateSize,<sp/>StateSize&gt;;</highlight></codeline>
<codeline lineno="19" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af47babdcc2441df1e20ce0e1dcf083d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af47babdcc2441df1e20ce0e1dcf083d3" kindref="member">Vector3d</ref><sp/>=<sp/>Eigen::Vector3d;</highlight></codeline>
<codeline lineno="23" refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" kindref="compound">Params</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sample<sp/>window<sp/>size<sp/>for<sp/>process<sp/>noise<sp/>estimation<sp/>(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a650bddc23959713130e3a0c564de5af1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a650bddc23959713130e3a0c564de5af1" kindref="member">process_noise_window</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>process<sp/>noise<sp/>values<sp/>for<sp/>different<sp/>state<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a36d6891ed987ad84626c353209e93d62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a36d6891ed987ad84626c353209e93d62" kindref="member">position_uncertainty_per_second</ref>;</highlight></codeline>
<codeline lineno="29" refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1aeb7691c587b5780480a2bbccae6d7f59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1aeb7691c587b5780480a2bbccae6d7f59" kindref="member">orientation_uncertainty_per_second</ref>;</highlight></codeline>
<codeline lineno="30" refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a20a9ab420ec092fe827450eba25d39f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a20a9ab420ec092fe827450eba25d39f2" kindref="member">linear_velocity_uncertainty_per_second</ref>;</highlight></codeline>
<codeline lineno="31" refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a86360392fa8acb4d1fbf772dc07a57d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a86360392fa8acb4d1fbf772dc07a57d2" kindref="member">angular_velocity_uncertainty_per_second</ref>;</highlight></codeline>
<codeline lineno="32" refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1ab888b7db255ed7924d57bfef6315bcc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1ab888b7db255ed7924d57bfef6315bcc3" kindref="member">linear_acceleration_uncertainty_per_second</ref>;</highlight></codeline>
<codeline lineno="33" refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a73690c6a07d29e4abca0afc538679dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a73690c6a07d29e4abca0afc538679dff" kindref="member">angular_acceleration_uncertainty_per_second</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>constructor<sp/>with<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1ab4db61e5a806eb5d5e75146ff5f28a2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1ab4db61e5a806eb5d5e75146ff5f28a2f" kindref="member">Params</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a650bddc23959713130e3a0c564de5af1" kindref="member">process_noise_window</ref>(40),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a36d6891ed987ad84626c353209e93d62" kindref="member">position_uncertainty_per_second</ref>(0.01),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1aeb7691c587b5780480a2bbccae6d7f59" kindref="member">orientation_uncertainty_per_second</ref>(0.01),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a20a9ab420ec092fe827450eba25d39f2" kindref="member">linear_velocity_uncertainty_per_second</ref>(0.1),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a86360392fa8acb4d1fbf772dc07a57d2" kindref="member">angular_velocity_uncertainty_per_second</ref>(0.1),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1ab888b7db255ed7924d57bfef6315bcc3" kindref="member">linear_acceleration_uncertainty_per_second</ref>(1.0),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a73690c6a07d29e4abca0afc538679dff" kindref="member">angular_acceleration_uncertainty_per_second</ref>(1.0)<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a457d6cf0093c1b61de4d0462dfbd6c44" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a457d6cf0093c1b61de4d0462dfbd6c44" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref><sp/>=<sp/>StateMatrix::Identity();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa66fe5b173bd89acfa2e81151a9b0226" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa66fe5b173bd89acfa2e81151a9b0226" kindref="member">StateModelInterface</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" kindref="compound">Params</ref>&amp;<sp/>params<sp/>=<sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" kindref="compound">Params</ref>())</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>(params),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af2fb47f316594dbb195b009f117a4f31" kindref="member">state_initialized_</ref>(false),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a77a6fb354f49c8d321d87175f35476ae" kindref="member">time_since_reset_</ref>(0.0)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>process<sp/>noise<sp/>with<sp/>diagonal<sp/>elements<sp/>based<sp/>on<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref><sp/>=<sp/>StateMatrix::Zero();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>position<sp/>uncertainty<sp/>(states<sp/>0-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref>.block&lt;3,<sp/>3&gt;(0,<sp/>0)<sp/>=</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a36d6891ed987ad84626c353209e93d62" kindref="member">position_uncertainty_per_second</ref>*<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a36d6891ed987ad84626c353209e93d62" kindref="member">position_uncertainty_per_second</ref>*<sp/>Eigen::Matrix3d::Identity()<sp/>/<sp/>9.0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>orientation<sp/>uncertainty<sp/>(states<sp/>3-6,<sp/>quaternion)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref>.block&lt;4,<sp/>4&gt;(3,<sp/>3)<sp/>=</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1aeb7691c587b5780480a2bbccae6d7f59" kindref="member">orientation_uncertainty_per_second</ref><sp/>*<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1aeb7691c587b5780480a2bbccae6d7f59" kindref="member">orientation_uncertainty_per_second</ref><sp/>*<sp/>Eigen::Matrix4d::Identity()<sp/>/<sp/>(16.0<sp/>*<sp/>9.0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>linear<sp/>velocity<sp/>uncertainty<sp/>(states<sp/>7-9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref>.block&lt;3,<sp/>3&gt;(7,<sp/>7)<sp/>=</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a20a9ab420ec092fe827450eba25d39f2" kindref="member">linear_velocity_uncertainty_per_second</ref><sp/>*<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a20a9ab420ec092fe827450eba25d39f2" kindref="member">linear_velocity_uncertainty_per_second</ref><sp/>*<sp/>Eigen::Matrix3d::Identity()<sp/>/<sp/>(9.0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>angular<sp/>velocity<sp/>uncertainty<sp/>(states<sp/>10-12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref>.block&lt;3,<sp/>3&gt;(10,<sp/>10)<sp/>=</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a86360392fa8acb4d1fbf772dc07a57d2" kindref="member">angular_velocity_uncertainty_per_second</ref><sp/>*<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a86360392fa8acb4d1fbf772dc07a57d2" kindref="member">angular_velocity_uncertainty_per_second</ref><sp/>*<sp/>Eigen::Matrix3d::Identity()<sp/>/<sp/>(9.0);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>linear<sp/>acceleration<sp/>uncertainty<sp/>(states<sp/>13-15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref>.block&lt;3,<sp/>3&gt;(13,<sp/>13)<sp/>=</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1ab888b7db255ed7924d57bfef6315bcc3" kindref="member">linear_acceleration_uncertainty_per_second</ref><sp/>*<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1ab888b7db255ed7924d57bfef6315bcc3" kindref="member">linear_acceleration_uncertainty_per_second</ref><sp/>*<sp/>Eigen::Matrix3d::Identity()<sp/>/<sp/>(9.0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>angular<sp/>acceleration<sp/>uncertainty<sp/>(states<sp/>16-18)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref>.block&lt;3,<sp/>3&gt;(16,<sp/>16)<sp/>=</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a73690c6a07d29e4abca0afc538679dff" kindref="member">angular_acceleration_uncertainty_per_second</ref><sp/>*<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a73690c6a07d29e4abca0afc538679dff" kindref="member">angular_acceleration_uncertainty_per_second</ref><sp/>*<sp/>Eigen::Matrix3d::Identity()<sp/>/<sp/>(9.0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a6cf0e88c125182ab7faaa90b25abead0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a6cf0e88c125182ab7faaa90b25abead0" kindref="member">~StateModelInterface</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aff55747339d075abc3c2a48d447a24eb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aff55747339d075abc3c2a48d447a24eb" kindref="member">PredictState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref>&amp;<sp/>state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ad928ea890a63fd0c6b069c8b519178b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" kindref="member">StateMatrix</ref><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ad928ea890a63fd0c6b069c8b519178b0" kindref="member">GetTransitionMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref>&amp;<sp/>state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1d1d3982bee824943c5ab5ef0686de50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1d1d3982bee824943c5ab5ef0686de50" kindref="member">PredictStateWithInputAccelerations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref>&amp;<sp/>state,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af47babdcc2441df1e20ce0e1dcf083d3" kindref="member">Vector3d</ref>&amp;<sp/>linear_acceleration=Vector3d::Zero(),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af47babdcc2441df1e20ce0e1dcf083d3" kindref="member">Vector3d</ref>&amp;<sp/>angular_acceleration=Vector3d::Zero())</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="126"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref><sp/>new_state<sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>new_state.segment&lt;3&gt;(<ref refid="structkinematic__arbiter_1_1core_1_1StateIndex_1_1LinearAcceleration_1abcde4fc83b04286fb93abd48826b54fe" kindref="member">StateIndex::LinearAcceleration::Begin</ref>())<sp/>=<sp/>linear_acceleration;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>new_state.segment&lt;3&gt;(<ref refid="structkinematic__arbiter_1_1core_1_1StateIndex_1_1AngularAcceleration_1aba70ff56c29cff8b0cd60ddd365d093f" kindref="member">StateIndex::AngularAcceleration::Begin</ref>())<sp/>=<sp/>angular_acceleration;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aff55747339d075abc3c2a48d447a24eb" kindref="member">PredictState</ref>(new_state,<sp/>dt);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2897de0f322264af5edf9e4b02f811ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" kindref="member">StateMatrix</ref><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2897de0f322264af5edf9e4b02f811ac" kindref="member">GetProcessNoiseCovariance</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref><sp/>*<sp/>fabs(dt);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ac321300d03a7b9d6b31e1351e6f268ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ac321300d03a7b9d6b31e1351e6f268ea" kindref="member">UpdateProcessNoise</ref>(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref>&amp;<sp/>a_priori_state,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref>&amp;<sp/>a_posteriori_state,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>process_to_measurement_ratio,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>state<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref><sp/>tmp_state_diff<sp/>=<sp/>sqrt(process_to_measurement_ratio)<sp/>*<sp/>(a_priori_state<sp/>-<sp/>a_posteriori_state).array().abs()<sp/>/<sp/>fabs(dt);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref><sp/>bounded_diff<sp/>=<sp/>(tmp_state_diff.array()<sp/>&lt;<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ab45147eda8b8cf3a95f11700fa8f9832" kindref="member">kMinStateDiff</ref>).select(0.0,<sp/>tmp_state_diff.array()).min(<ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a318a341229a8bb90c1ea7712cb8d4869" kindref="member">kMaxStateDiff</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>maximum<sp/>bound<sp/>to<sp/>state<sp/>differences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" kindref="member">state_diff_</ref><sp/>+=<sp/>(bounded_diff<sp/>-<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" kindref="member">state_diff_</ref>)<sp/>/<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a650bddc23959713130e3a0c564de5af1" kindref="member">process_noise_window</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" kindref="member">state_diff_</ref>.array()<sp/>&gt;<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ab45147eda8b8cf3a95f11700fa8f9832" kindref="member">kMinStateDiff</ref>).all()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref><sp/>+=<sp/>(<ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" kindref="member">state_diff_</ref><sp/>*<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" kindref="member">state_diff_</ref>.transpose()<sp/>-<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref>)<sp/>/<sp/>(<ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>.<ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params_1a650bddc23959713130e3a0c564de5af1" kindref="member">process_noise_window</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a4efb543e3192c48d7a466356cfd77583" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" kindref="member">StateMatrix</ref>&amp;<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a4efb543e3192c48d7a466356cfd77583" kindref="member">GetProcessNoise</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a82facf89d0ec9ebf62547512a8ae9af4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" kindref="compound">Params</ref>&amp;<sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a82facf89d0ec9ebf62547512a8ae9af4" kindref="member">GetParams</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Threshold<sp/>for<sp/>numerical<sp/>comparisons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ab45147eda8b8cf3a95f11700fa8f9832" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1ab45147eda8b8cf3a95f11700fa8f9832" kindref="member">kMinStateDiff</ref><sp/>=<sp/>1e-6;</highlight></codeline>
<codeline lineno="201" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a318a341229a8bb90c1ea7712cb8d4869" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a318a341229a8bb90c1ea7712cb8d4869" kindref="member">kMaxStateDiff</ref><sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1aa727c87965ff75514c4e097c6456905b" kindref="member">StateVector</ref><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1adc766438943c3d801ed8dfd5a31493f3" kindref="member">state_diff_</ref><sp/>=<sp/>StateVector::Zero();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>model<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structkinematic__arbiter_1_1core_1_1StateModelInterface_1_1Params" kindref="compound">Params</ref><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af6897e6a8b84cef9112c75329db6a947" kindref="member">params_</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>noise<sp/>covariance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a1eff680285d455bb828d1f94ea67c30d" kindref="member">StateMatrix</ref><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a2fa3188a159cf16c6847228c26be8af3" kindref="member">process_noise_</ref><sp/>=<sp/>StateMatrix::Identity();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>model<sp/>initialization<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af2fb47f316594dbb195b009f117a4f31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1af2fb47f316594dbb195b009f117a4f31" kindref="member">state_initialized_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213" refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a77a6fb354f49c8d321d87175f35476ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface_1a77a6fb354f49c8d321d87175f35476ae" kindref="member">time_since_reset_</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>kinematic_arbiter</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/state_model_interface.hpp"/>
  </compounddef>
</doxygen>
