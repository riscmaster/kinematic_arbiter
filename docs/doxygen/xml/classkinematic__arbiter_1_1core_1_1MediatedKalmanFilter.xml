<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter" kind="class" language="C++" prot="public">
    <compoundname>kinematic_arbiter::core::MediatedKalmanFilter</compoundname>
    <includes refid="mediated__kalman__filter_8hpp" local="no">mediated_kalman_filter.hpp</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>StateSize</declname>
        <defname>StateSize</defname>
      </param>
      <param>
        <type>typename ProcessModel</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a010877c53e971ea72d350d6b6581a522" prot="public" static="no">
        <type>Eigen::Matrix&lt; double, StateSize, 1 &gt;</type>
        <definition>using kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::StateVector =  Eigen::Matrix&lt;double, StateSize, 1&gt;</definition>
        <argsstring></argsstring>
        <name>StateVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="34" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a90a82e17ebf8d30c1e7600d975f0fb1e" prot="public" static="no">
        <type>Eigen::Matrix&lt; double, StateSize, StateSize &gt;</type>
        <definition>using kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::StateMatrix =  Eigen::Matrix&lt;double, StateSize, StateSize&gt;</definition>
        <argsstring></argsstring>
        <name>StateMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="35" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1abf94185d2347f9477222d013aa858ffc" prot="public" static="no">
        <type>Eigen::Array&lt; bool, StateSize, 1 &gt;</type>
        <definition>using kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::StateFlags =  Eigen::Array&lt;bool, StateSize, 1&gt;</definition>
        <argsstring></argsstring>
        <name>StateFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="36" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ab9a366cb41342ef2cd39f23236bc7f71" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; ProcessModel &gt;</type>
        <definition>std::shared_ptr&lt;ProcessModel&gt; kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::process_model_</definition>
        <argsstring></argsstring>
        <name>process_model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="342" column="19" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="342" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a9c19b50be8d81cb1189fb9b1915d5ab2" compoundref="mediated__kalman__filter_8hpp" startline="244" endline="254">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetStateCovariance</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a2e8b9123e0aa4aa9befe740a3c705137" compoundref="mediated__kalman__filter_8hpp" startline="231" endline="239">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetStateEstimate</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae29de60fbbadf45ed3b9121624818ee9" compoundref="mediated__kalman__filter_8hpp" startline="288" endline="295">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::PredictNewReference</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae03760b631e2c5595e28d72f4ae9e137" compoundref="mediated__kalman__filter_8hpp" startline="52" endline="61">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface" kindref="compound">MeasurementModelInterface</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;MeasurementModelInterface&gt; &gt; kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::sensors_</definition>
        <argsstring></argsstring>
        <name>sensors_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="343" column="15" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="343" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad693626dcfd5ddc5e76b35a146cc7296" compoundref="mediated__kalman__filter_8hpp" startline="70" endline="81">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::AddSensor</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac46df7e94cee7cdedbde395d63ab7dc7" compoundref="mediated__kalman__filter_8hpp" startline="317" endline="322">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetExpectedMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a98c6df3f49307d26042ae7b89de41f87" compoundref="mediated__kalman__filter_8hpp" startline="303" endline="308">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetSensorCovarianceByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a1350b537bf0d4a0bfa7308c61b6a46ea" compoundref="mediated__kalman__filter_8hpp" startline="89" endline="92">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetSensorPoseInBodyFrameByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae03760b631e2c5595e28d72f4ae9e137" compoundref="mediated__kalman__filter_8hpp" startline="52" endline="61">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reset</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aad372a7000e7629d2fd5116d36b75b4e" compoundref="mediated__kalman__filter_8hpp" startline="100" endline="103">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::SetSensorPoseInBodyFrameByIndex</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad62715db165302f259ba9285bb1dd2ee" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_time_</definition>
        <argsstring></argsstring>
        <name>reference_time_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="344" column="10" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="344" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a7b4ef93886f9edac9c9b17405efb961b" compoundref="mediated__kalman__filter_8hpp" startline="269" endline="269">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetCurrentTime</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a9c19b50be8d81cb1189fb9b1915d5ab2" compoundref="mediated__kalman__filter_8hpp" startline="244" endline="254">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetStateCovariance</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a2e8b9123e0aa4aa9befe740a3c705137" compoundref="mediated__kalman__filter_8hpp" startline="231" endline="239">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetStateEstimate</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae29de60fbbadf45ed3b9121624818ee9" compoundref="mediated__kalman__filter_8hpp" startline="288" endline="295">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::PredictNewReference</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae03760b631e2c5595e28d72f4ae9e137" compoundref="mediated__kalman__filter_8hpp" startline="52" endline="61">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reset</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1af3e1b6b4a5940c1b728fbd23b57ed8a7" compoundref="mediated__kalman__filter_8hpp" startline="259" endline="264">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::SetStateEstimate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a0fe4298d48744d928989efe06f5b213c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::max_delay_window_</definition>
        <argsstring></argsstring>
        <name>max_delay_window_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="345" column="10" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="345" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae071f5515d1cd57946a622f89d1ad3d9" compoundref="mediated__kalman__filter_8hpp" startline="274" endline="274">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::SetMaxDelayWindow</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a3ec1d01d6f85632726d6f3155de4bff2" prot="private" static="no" mutable="no">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1abf94185d2347f9477222d013aa858ffc" kindref="member">StateFlags</ref></type>
        <definition>StateFlags kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::initialized_states_</definition>
        <argsstring></argsstring>
        <name>initialized_states_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="346" column="14" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="346" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1abb51c9b7b9e5599bdeafd8af87db11fd" compoundref="mediated__kalman__filter_8hpp" startline="278" endline="278">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::IsInitialized</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae03760b631e2c5595e28d72f4ae9e137" compoundref="mediated__kalman__filter_8hpp" startline="52" endline="61">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reset</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1af3e1b6b4a5940c1b728fbd23b57ed8a7" compoundref="mediated__kalman__filter_8hpp" startline="259" endline="264">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::SetStateEstimate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a6a090d11eea0d3dacdeb57d573ebeb49" prot="private" static="no" mutable="no">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a010877c53e971ea72d350d6b6581a522" kindref="member">StateVector</ref></type>
        <definition>StateVector kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_state_</definition>
        <argsstring></argsstring>
        <name>reference_state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="347" column="15" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="347" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac46df7e94cee7cdedbde395d63ab7dc7" compoundref="mediated__kalman__filter_8hpp" startline="317" endline="322">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetExpectedMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a9c19b50be8d81cb1189fb9b1915d5ab2" compoundref="mediated__kalman__filter_8hpp" startline="244" endline="254">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetStateCovariance</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a2e8b9123e0aa4aa9befe740a3c705137" compoundref="mediated__kalman__filter_8hpp" startline="231" endline="239">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetStateEstimate</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae29de60fbbadf45ed3b9121624818ee9" compoundref="mediated__kalman__filter_8hpp" startline="288" endline="295">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::PredictNewReference</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae03760b631e2c5595e28d72f4ae9e137" compoundref="mediated__kalman__filter_8hpp" startline="52" endline="61">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reset</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1af3e1b6b4a5940c1b728fbd23b57ed8a7" compoundref="mediated__kalman__filter_8hpp" startline="259" endline="264">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::SetStateEstimate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac3f995d79e6de6d6f83038797b499bba" prot="private" static="no" mutable="no">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a90a82e17ebf8d30c1e7600d975f0fb1e" kindref="member">StateMatrix</ref></type>
        <definition>StateMatrix kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_covariance_</definition>
        <argsstring></argsstring>
        <name>reference_covariance_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="348" column="15" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="348" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a9c19b50be8d81cb1189fb9b1915d5ab2" compoundref="mediated__kalman__filter_8hpp" startline="244" endline="254">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetStateCovariance</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae29de60fbbadf45ed3b9121624818ee9" compoundref="mediated__kalman__filter_8hpp" startline="288" endline="295">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::PredictNewReference</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae03760b631e2c5595e28d72f4ae9e137" compoundref="mediated__kalman__filter_8hpp" startline="52" endline="61">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reset</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1af3e1b6b4a5940c1b728fbd23b57ed8a7" compoundref="mediated__kalman__filter_8hpp" startline="259" endline="264">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::SetStateEstimate</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1afa53b6f23ee08c667756ad6c2acd4568" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::MediatedKalmanFilter</definition>
        <argsstring>(std::shared_ptr&lt; ProcessModel &gt; process_model)</argsstring>
        <name>MediatedKalmanFilter</name>
        <param>
          <type>std::shared_ptr&lt; ProcessModel &gt;</type>
          <declname>process_model</declname>
        </param>
        <briefdescription>
<para>Constructor with just process model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="41" column="12" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae03760b631e2c5595e28d72f4ae9e137" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset the filter to initial state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="52" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="52" bodyend="61"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a3ec1d01d6f85632726d6f3155de4bff2" compoundref="mediated__kalman__filter_8hpp" startline="346">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::initialized_states_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ab9a366cb41342ef2cd39f23236bc7f71" compoundref="mediated__kalman__filter_8hpp" startline="342">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::process_model_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac3f995d79e6de6d6f83038797b499bba" compoundref="mediated__kalman__filter_8hpp" startline="348">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_covariance_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a6a090d11eea0d3dacdeb57d573ebeb49" compoundref="mediated__kalman__filter_8hpp" startline="347">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_state_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad62715db165302f259ba9285bb1dd2ee" compoundref="mediated__kalman__filter_8hpp" startline="344">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_time_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" compoundref="mediated__kalman__filter_8hpp" startline="343">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::sensors_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad693626dcfd5ddc5e76b35a146cc7296" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::AddSensor</definition>
        <argsstring>(std::shared_ptr&lt; MeasurementModelInterface &gt; sensor_model)</argsstring>
        <name>AddSensor</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface" kindref="compound">MeasurementModelInterface</ref> &gt;</type>
          <declname>sensor_model</declname>
        </param>
        <briefdescription>
<para>Add a sensor model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>Sensor type (from SensorType enum) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_model</parametername>
</parameternamelist>
<parameterdescription>
<para>Shared pointer to measurement model interface </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size_t Index of the newly added sensor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="70" column="10" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="70" bodyend="81"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" compoundref="mediated__kalman__filter_8hpp" startline="343">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::sensors_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a1350b537bf0d4a0bfa7308c61b6a46ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetSensorPoseInBodyFrameByIndex</definition>
        <argsstring>(size_t sensor_index, Eigen::Isometry3d &amp;pose) const</argsstring>
        <name>GetSensorPoseInBodyFrameByIndex</name>
        <param>
          <type>size_t</type>
          <declname>sensor_index</declname>
        </param>
        <param>
          <type>Eigen::Isometry3d &amp;</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
<para>Get sensor pose in body frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pose</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor-to-body transform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if the operation was successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="89" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="89" bodyend="92"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" compoundref="mediated__kalman__filter_8hpp" startline="343">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::sensors_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aad372a7000e7629d2fd5116d36b75b4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::SetSensorPoseInBodyFrameByIndex</definition>
        <argsstring>(size_t sensor_index, const Eigen::Isometry3d &amp;pose)</argsstring>
        <name>SetSensorPoseInBodyFrameByIndex</name>
        <param>
          <type>size_t</type>
          <declname>sensor_index</declname>
        </param>
        <param>
          <type>const Eigen::Isometry3d &amp;</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
<para>Set sensor pose in body frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose</parametername>
</parameternamelist>
<parameterdescription>
<para>New sensor-to-body transform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if the operation was successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="100" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="100" bodyend="103"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" compoundref="mediated__kalman__filter_8hpp" startline="343">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::sensors_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</definition>
        <argsstring>(size_t sensor_index, const MeasurementModelInterface::DynamicVector &amp;measurement, double timestamp)</argsstring>
        <name>ProcessMeasurementByIndex</name>
        <param>
          <type>size_t</type>
          <declname>sensor_index</declname>
        </param>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a9dfbdba5f6b255c3ac4c8ca73eb58a5b" kindref="member">MeasurementModelInterface::DynamicVector</ref> &amp;</type>
          <declname>measurement</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Process measurement for a sensor by index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor type enum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the sensor to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>measurement</parametername>
</parameternamelist>
<parameterdescription>
<para>Measurement vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp of the measurement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if measurement was processed successfully </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="114" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="114" bodyend="225"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a3ec1d01d6f85632726d6f3155de4bff2" compoundref="mediated__kalman__filter_8hpp" startline="346">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::initialized_states_</references>
        <references refid="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1acc8b0ee39be40ad70e672bf5691d43b8" compoundref="measurement__model__interface_8hpp" startline="73">kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData::innovation</references>
        <references refid="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a6850572c55c29f12dbc26b2d6ca4568b" compoundref="measurement__model__interface_8hpp" startline="75">kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData::innovation_covariance</references>
        <references refid="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a5ffc53fcce9974f003d3eead2cc3615f" compoundref="measurement__model__interface_8hpp" startline="74">kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData::jacobian</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a0fe4298d48744d928989efe06f5b213c" compoundref="mediated__kalman__filter_8hpp" startline="345">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::max_delay_window_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ab9a366cb41342ef2cd39f23236bc7f71" compoundref="mediated__kalman__filter_8hpp" startline="342">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::process_model_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac3f995d79e6de6d6f83038797b499bba" compoundref="mediated__kalman__filter_8hpp" startline="348">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_covariance_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a6a090d11eea0d3dacdeb57d573ebeb49" compoundref="mediated__kalman__filter_8hpp" startline="347">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_state_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad62715db165302f259ba9285bb1dd2ee" compoundref="mediated__kalman__filter_8hpp" startline="344">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_time_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" compoundref="mediated__kalman__filter_8hpp" startline="343">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::sensors_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a2e8b9123e0aa4aa9befe740a3c705137" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a010877c53e971ea72d350d6b6581a522" kindref="member">StateVector</ref></type>
        <definition>StateVector kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetStateEstimate</definition>
        <argsstring>(double timestamp=-1.0) const</argsstring>
        <name>GetStateEstimate</name>
        <param>
          <type>double</type>
          <declname>timestamp</declname>
          <defval>-1.0</defval>
        </param>
        <briefdescription>
<para>Get state estimate at given time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="231" column="15" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="231" bodyend="239"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ab9a366cb41342ef2cd39f23236bc7f71" compoundref="mediated__kalman__filter_8hpp" startline="342">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::process_model_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a6a090d11eea0d3dacdeb57d573ebeb49" compoundref="mediated__kalman__filter_8hpp" startline="347">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_state_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad62715db165302f259ba9285bb1dd2ee" compoundref="mediated__kalman__filter_8hpp" startline="344">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_time_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a9c19b50be8d81cb1189fb9b1915d5ab2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a90a82e17ebf8d30c1e7600d975f0fb1e" kindref="member">StateMatrix</ref></type>
        <definition>StateMatrix kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetStateCovariance</definition>
        <argsstring>(double timestamp=-1.0) const</argsstring>
        <name>GetStateCovariance</name>
        <param>
          <type>double</type>
          <declname>timestamp</declname>
          <defval>-1.0</defval>
        </param>
        <briefdescription>
<para>Get state covariance at given time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="244" column="15" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="244" bodyend="254"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ab9a366cb41342ef2cd39f23236bc7f71" compoundref="mediated__kalman__filter_8hpp" startline="342">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::process_model_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac3f995d79e6de6d6f83038797b499bba" compoundref="mediated__kalman__filter_8hpp" startline="348">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_covariance_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a6a090d11eea0d3dacdeb57d573ebeb49" compoundref="mediated__kalman__filter_8hpp" startline="347">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_state_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad62715db165302f259ba9285bb1dd2ee" compoundref="mediated__kalman__filter_8hpp" startline="344">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_time_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1af3e1b6b4a5940c1b728fbd23b57ed8a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::SetStateEstimate</definition>
        <argsstring>(const StateVector &amp;state, double timestamp, const StateMatrix &amp;covariance=StateMatrix::Identity())</argsstring>
        <name>SetStateEstimate</name>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a010877c53e971ea72d350d6b6581a522" kindref="member">StateVector</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a90a82e17ebf8d30c1e7600d975f0fb1e" kindref="member">StateMatrix</ref> &amp;</type>
          <declname>covariance</declname>
          <defval>StateMatrix::Identity()</defval>
        </param>
        <briefdescription>
<para>Set state estimate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="259" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="259" bodyend="264"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a3ec1d01d6f85632726d6f3155de4bff2" compoundref="mediated__kalman__filter_8hpp" startline="346">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::initialized_states_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac3f995d79e6de6d6f83038797b499bba" compoundref="mediated__kalman__filter_8hpp" startline="348">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_covariance_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a6a090d11eea0d3dacdeb57d573ebeb49" compoundref="mediated__kalman__filter_8hpp" startline="347">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_state_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad62715db165302f259ba9285bb1dd2ee" compoundref="mediated__kalman__filter_8hpp" startline="344">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_time_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a7b4ef93886f9edac9c9b17405efb961b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetCurrentTime</definition>
        <argsstring>() const</argsstring>
        <name>GetCurrentTime</name>
        <briefdescription>
<para>Get current time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="269" column="10" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="269" bodyend="269"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad62715db165302f259ba9285bb1dd2ee" compoundref="mediated__kalman__filter_8hpp" startline="344">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_time_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae071f5515d1cd57946a622f89d1ad3d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::SetMaxDelayWindow</definition>
        <argsstring>(double window)</argsstring>
        <name>SetMaxDelayWindow</name>
        <param>
          <type>double</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Set max delay window. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="274" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="274" bodyend="274"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a0fe4298d48744d928989efe06f5b213c" compoundref="mediated__kalman__filter_8hpp" startline="345">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::max_delay_window_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1abb51c9b7b9e5599bdeafd8af87db11fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::IsInitialized</definition>
        <argsstring>() const</argsstring>
        <name>IsInitialized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="278" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="278" bodyend="278"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a3ec1d01d6f85632726d6f3155de4bff2" compoundref="mediated__kalman__filter_8hpp" startline="346">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::initialized_states_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae29de60fbbadf45ed3b9121624818ee9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::PredictNewReference</definition>
        <argsstring>(double timestamp)</argsstring>
        <name>PredictNewReference</name>
        <param>
          <type>double</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Predict and update reference state to a new timestamp (for dead reckoning) </para>
        </briefdescription>
        <detaileddescription>
<para>This method explicitly advances the filter&apos;s reference state and covariance using only the process model prediction, without incorporating any measurements.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The new reference timestamp </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="288" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="288" bodyend="295"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ab9a366cb41342ef2cd39f23236bc7f71" compoundref="mediated__kalman__filter_8hpp" startline="342">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::process_model_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac3f995d79e6de6d6f83038797b499bba" compoundref="mediated__kalman__filter_8hpp" startline="348">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_covariance_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a6a090d11eea0d3dacdeb57d573ebeb49" compoundref="mediated__kalman__filter_8hpp" startline="347">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_state_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad62715db165302f259ba9285bb1dd2ee" compoundref="mediated__kalman__filter_8hpp" startline="344">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_time_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a98c6df3f49307d26042ae7b89de41f87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetSensorCovarianceByIndex</definition>
        <argsstring>(size_t sensor_index, MeasurementModelInterface::DynamicCovariance &amp;covariance) const</argsstring>
        <name>GetSensorCovarianceByIndex</name>
        <param>
          <type>size_t</type>
          <declname>sensor_index</declname>
        </param>
        <param>
          <type><ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a5f3205482e9935a1dcdecb315ed2c72c" kindref="member">MeasurementModelInterface::DynamicCovariance</ref> &amp;</type>
          <declname>covariance</declname>
        </param>
        <briefdescription>
<para>Get sensor&apos;s measurement covariance matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">covariance</parametername>
</parameternamelist>
<parameterdescription>
<para>The measurement covariance matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if the operation was successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="303" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="303" bodyend="308"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" compoundref="mediated__kalman__filter_8hpp" startline="343">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::sensors_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac46df7e94cee7cdedbde395d63ab7dc7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetExpectedMeasurementByIndex</definition>
        <argsstring>(size_t sensor_index, MeasurementModelInterface::DynamicVector &amp;expected_measurement) const</argsstring>
        <name>GetExpectedMeasurementByIndex</name>
        <param>
          <type>size_t</type>
          <declname>sensor_index</declname>
        </param>
        <param>
          <type><ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a9dfbdba5f6b255c3ac4c8ca73eb58a5b" kindref="member">MeasurementModelInterface::DynamicVector</ref> &amp;</type>
          <declname>expected_measurement</declname>
        </param>
        <briefdescription>
<para>Get expected measurement from a sensor using current reference state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">expected_measurement</parametername>
</parameternamelist>
<parameterdescription>
<para>The predicted measurement </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state_at_sensor_time</parametername>
</parameternamelist>
<parameterdescription>
<para>The state at the sensor time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if the operation was successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="317" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="317" bodyend="322"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a6a090d11eea0d3dacdeb57d573ebeb49" compoundref="mediated__kalman__filter_8hpp" startline="347">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::reference_state_</references>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" compoundref="mediated__kalman__filter_8hpp" startline="343">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::sensors_</references>
      </memberdef>
      <memberdef kind="function" id="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a28b4c6133b6013b376db8f267c8fef24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::GetExpectedMeasurementByIndex</definition>
        <argsstring>(size_t sensor_index, MeasurementModelInterface::DynamicVector &amp;expected_measurement, const StateVector &amp;state_at_sensor_time) const</argsstring>
        <name>GetExpectedMeasurementByIndex</name>
        <param>
          <type>size_t</type>
          <declname>sensor_index</declname>
        </param>
        <param>
          <type><ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a9dfbdba5f6b255c3ac4c8ca73eb58a5b" kindref="member">MeasurementModelInterface::DynamicVector</ref> &amp;</type>
          <declname>expected_measurement</declname>
        </param>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a010877c53e971ea72d350d6b6581a522" kindref="member">StateVector</ref> &amp;</type>
          <declname>state_at_sensor_time</declname>
        </param>
        <briefdescription>
<para>Get expected measurement from a sensor using a specific state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the sensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">expected_measurement</parametername>
</parameternamelist>
<parameterdescription>
<para>The predicted measurement </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state_at_sensor_time</parametername>
</parameternamelist>
<parameterdescription>
<para>The state at the sensor time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if the operation was successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="331" column="8" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="331" bodyend="337"/>
        <references refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" compoundref="mediated__kalman__filter_8hpp" startline="343">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::sensors_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter" kindref="compound">MediatedKalmanFilter</ref> implements a Kalman filter with chi-squared validation. </para>
    </briefdescription>
    <detaileddescription>
<para>Leverages <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface" kindref="compound">StateModelInterface</ref> for prediction and ProcessNoise management and <ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface" kindref="compound">MeasurementModelInterface</ref> for measurement processing, validation and mediation.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>StateSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of state vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ProcessModel</parametername>
</parameternamelist>
<parameterdescription>
<para>Type implementing <ref refid="classkinematic__arbiter_1_1core_1_1StateModelInterface" kindref="compound">StateModelInterface</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" line="31" column="1" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/mediated_kalman_filter.hpp" bodystart="31" bodyend="349"/>
    <listofallmembers>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad693626dcfd5ddc5e76b35a146cc7296" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>AddSensor</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a7b4ef93886f9edac9c9b17405efb961b" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>GetCurrentTime</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac46df7e94cee7cdedbde395d63ab7dc7" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>GetExpectedMeasurementByIndex</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a28b4c6133b6013b376db8f267c8fef24" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>GetExpectedMeasurementByIndex</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a98c6df3f49307d26042ae7b89de41f87" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>GetSensorCovarianceByIndex</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a1350b537bf0d4a0bfa7308c61b6a46ea" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>GetSensorPoseInBodyFrameByIndex</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a9c19b50be8d81cb1189fb9b1915d5ab2" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>GetStateCovariance</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a2e8b9123e0aa4aa9befe740a3c705137" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>GetStateEstimate</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a3ec1d01d6f85632726d6f3155de4bff2" prot="private" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>initialized_states_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1abb51c9b7b9e5599bdeafd8af87db11fd" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>IsInitialized</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a0fe4298d48744d928989efe06f5b213c" prot="private" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>max_delay_window_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1afa53b6f23ee08c667756ad6c2acd4568" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>MediatedKalmanFilter</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae29de60fbbadf45ed3b9121624818ee9" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>PredictNewReference</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ab9a366cb41342ef2cd39f23236bc7f71" prot="private" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>process_model_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>ProcessMeasurementByIndex</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ac3f995d79e6de6d6f83038797b499bba" prot="private" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>reference_covariance_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a6a090d11eea0d3dacdeb57d573ebeb49" prot="private" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>reference_state_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ad62715db165302f259ba9285bb1dd2ee" prot="private" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>reference_time_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae03760b631e2c5595e28d72f4ae9e137" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>reset</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a25595e83553b29a3ea629be7e94b7348" prot="private" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>sensors_</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1ae071f5515d1cd57946a622f89d1ad3d9" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>SetMaxDelayWindow</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aad372a7000e7629d2fd5116d36b75b4e" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>SetSensorPoseInBodyFrameByIndex</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1af3e1b6b4a5940c1b728fbd23b57ed8a7" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>SetStateEstimate</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1abf94185d2347f9477222d013aa858ffc" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>StateFlags</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a90a82e17ebf8d30c1e7600d975f0fb1e" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>StateMatrix</name></member>
      <member refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1a010877c53e971ea72d350d6b6581a522" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MediatedKalmanFilter</scope><name>StateVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
