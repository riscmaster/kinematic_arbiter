<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData" kind="struct" language="C++" prot="public">
    <compoundname>kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData</compoundname>
    <includes refid="measurement__model__interface_8hpp" local="no">measurement_model_interface.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1acc8b0ee39be40ad70e672bf5691d43b8" prot="public" static="no" mutable="no">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a9dfbdba5f6b255c3ac4c8ca73eb58a5b" kindref="member">DynamicVector</ref></type>
        <definition>DynamicVector kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData::innovation</definition>
        <argsstring></argsstring>
        <name>innovation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" line="73" column="19" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" bodystart="73" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1aa99e79b94b0117dc35ebe529a63d8e3d" compoundref="measurement__model__interface_8hpp" startline="252" endline="316">kinematic_arbiter::core::MeasurementModelInterface::ValidateAndMediate</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a4d2c920c121d7b75cbe1d0edc8d0cd11" compoundref="measurement__model__interface_8hpp" startline="205" endline="240">kinematic_arbiter::core::MeasurementModelInterface::ValidateAuxiliaryData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a5ffc53fcce9974f003d3eead2cc3615f" prot="public" static="no" mutable="no">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a72e3859677c567145f7abfddc1783368" kindref="member">DynamicJacobian</ref></type>
        <definition>DynamicJacobian kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData::jacobian</definition>
        <argsstring></argsstring>
        <name>jacobian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" line="74" column="21" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" bodystart="74" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1aa99e79b94b0117dc35ebe529a63d8e3d" compoundref="measurement__model__interface_8hpp" startline="252" endline="316">kinematic_arbiter::core::MeasurementModelInterface::ValidateAndMediate</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a4d2c920c121d7b75cbe1d0edc8d0cd11" compoundref="measurement__model__interface_8hpp" startline="205" endline="240">kinematic_arbiter::core::MeasurementModelInterface::ValidateAuxiliaryData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a6850572c55c29f12dbc26b2d6ca4568b" prot="public" static="no" mutable="no">
        <type><ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a5f3205482e9935a1dcdecb315ed2c72c" kindref="member">DynamicCovariance</ref></type>
        <definition>DynamicCovariance kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData::innovation_covariance</definition>
        <argsstring></argsstring>
        <name>innovation_covariance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" line="75" column="23" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" bodystart="75" bodyend="-1"/>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MediatedKalmanFilter_1aa24272033e8079022228e4f6e5765fd8" compoundref="mediated__kalman__filter_8hpp" startline="114" endline="225">kinematic_arbiter::core::MediatedKalmanFilter&lt; StateSize, ProcessModel &gt;::ProcessMeasurementByIndex</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1aa99e79b94b0117dc35ebe529a63d8e3d" compoundref="measurement__model__interface_8hpp" startline="252" endline="316">kinematic_arbiter::core::MeasurementModelInterface::ValidateAndMediate</referencedby>
        <referencedby refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a4d2c920c121d7b75cbe1d0edc8d0cd11" compoundref="measurement__model__interface_8hpp" startline="205" endline="240">kinematic_arbiter::core::MeasurementModelInterface::ValidateAuxiliaryData</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a61d5c2946efc50d95d98cbb9d14a49de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData::MeasurementAuxData</definition>
        <argsstring>()=default</argsstring>
        <name>MeasurementAuxData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" line="78" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a1b9e47817827bc23d104b7a530f56c1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData::MeasurementAuxData</definition>
        <argsstring>(const DynamicVector &amp;inn, const DynamicJacobian &amp;jac, const DynamicCovariance &amp;inn_cov)</argsstring>
        <name>MeasurementAuxData</name>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a9dfbdba5f6b255c3ac4c8ca73eb58a5b" kindref="member">DynamicVector</ref> &amp;</type>
          <declname>inn</declname>
        </param>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a72e3859677c567145f7abfddc1783368" kindref="member">DynamicJacobian</ref> &amp;</type>
          <declname>jac</declname>
        </param>
        <param>
          <type>const <ref refid="classkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1a5f3205482e9935a1dcdecb315ed2c72c" kindref="member">DynamicCovariance</ref> &amp;</type>
          <declname>inn_cov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" line="79" column="5" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" bodystart="79" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Core measurement auxiliary data that can be reused across algorithms. </para>
    </briefdescription>
    <detaileddescription>
<para>Contains expensive-to-compute elements that are needed for validation, updating, retrodiction, and other filter operations. </para>
    </detaileddescription>
    <location file="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" line="72" column="3" bodyfile="/home/spencer/ros2workspace/src/kinematic_arbiter/include/kinematic_arbiter/core/measurement_model_interface.hpp" bodystart="72" bodyend="84"/>
    <listofallmembers>
      <member refid="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1acc8b0ee39be40ad70e672bf5691d43b8" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData</scope><name>innovation</name></member>
      <member refid="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a6850572c55c29f12dbc26b2d6ca4568b" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData</scope><name>innovation_covariance</name></member>
      <member refid="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a5ffc53fcce9974f003d3eead2cc3615f" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData</scope><name>jacobian</name></member>
      <member refid="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a61d5c2946efc50d95d98cbb9d14a49de" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData</scope><name>MeasurementAuxData</name></member>
      <member refid="structkinematic__arbiter_1_1core_1_1MeasurementModelInterface_1_1MeasurementAuxData_1a1b9e47817827bc23d104b7a530f56c1f" prot="public" virt="non-virtual"><scope>kinematic_arbiter::core::MeasurementModelInterface::MeasurementAuxData</scope><name>MeasurementAuxData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
